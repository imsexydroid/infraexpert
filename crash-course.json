{"name":"Infra Crash Course","lessons":[{"uid":"introduction","name":"Introduction","module":"Introduction","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Infrastructure roles come in many flavors, but they all share the same foundational knowledge. So to all aspiring Site Reliability Engineers, Technical Solutions Engineers, DevOps Engineers, and any other engineers in need of infra expertise: you've come to the right place!\n","video":{"vimeoId":"760178077","duration":5,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299580628-527b16961d82c639dca2580ed56031af4030684a979e6e63a_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"what-is-a-network","name":"What Is A Network?","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"A network consists of two or more computers that are LinkedIn order to share resources.\n","video":{"vimeoId":"760177938","duration":3,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA protocol is a set of rules for formatting and processing data. Network protocols are \nlike a common language for computers. The computers within a network may use vastly different \nsoftware and hardware; however, the use of protocols enables them to communicate with each other regardless.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Network","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA network consists of two or more computers that are linked in order to share resources \n(such as printers and CDs), exchange files, or allow electronic communications. The computers \non a network may be linked through cables, telephone lines, radio waves, satellites, or infrared light beams.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Data Link","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA data link is the term used to describe the connection between two systems in order for them \nto share information. A wired data link is a communication method that sends information over wires or \ncables. The variations of this type of connection are twisted pair cables, coaxial cables, fiber-optic cables, and \nethernet over copper.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"how-the-internet-works","name":"How The Internet Works","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"A client is a thing that talks to servers. A server is a thing that talks to clients. The client—server model is a thing made up of a bunch of clients and servers talking to one another.\n\nAnd that, folks, is how the Internet works!\n","video":{"vimeoId":"760365452","duration":9,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"TCP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Network protocol built on top of the Internet Protocol (IP). Allows for\n  ordered, reliable data delivery between machines over the public internet by\n  creating a \u003cb\u003econnection\u003c/b\u003e.\n\u003c/p\u003e\n\u003cp\u003e\n  TCP is usually implemented in the kernel, which exposes \u003cb\u003esockets\u003c/b\u003e to\n  applications that they can use to stream data through an open connection.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Port","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  In order for multiple programs to listen for new network connections on the\n  same machine without colliding, they pick a \u003cb\u003eport\u003c/b\u003e to listen on. A port\n  is an integer between 0 and 65,535 (2\u003csup\u003e16\u003c/sup\u003e ports total).\n\u003c/p\u003e\n\u003cp\u003e\n  Typically, ports 0-1023 are reserved for \u003ci\u003esystem ports\u003c/i\u003e (also called\n  \u003ci\u003ewell-known\u003c/i\u003e ports) and shouldn't be used by user-level processes.\n  Certain ports have pre-defined uses, and although you usually won't be\n  required to have them memorized, they can sometimes come in handy. Below are\n  some examples:\n\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e22: Secure Shell\u003c/li\u003e\n  \u003cli\u003e53: DNS lookup\u003c/li\u003e\n  \u003cli\u003e80: HTTP\u003c/li\u003e\n  \u003cli\u003e443: HTTPS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Stands for \u003cb\u003eInternet Protocol\u003c/b\u003e. This network protocol outlines how almost\n  all machine-to-machine communications should happen in the world. Other\n  protocols like \u003cb\u003eTCP\u003c/b\u003e, \u003cb\u003eUDP\u003c/b\u003e and \u003cb\u003eHTTP\u003c/b\u003e are built on top of IP.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Client","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A machine or process that requests data or service from a server.\n\u003c/p\u003e\n\u003cp\u003e\n  Note that a single machine or piece of software can be both a client and a\n  server at the same time. For instance, a single machine could act as a server\n  for end users and as a client for a database.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Server","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A machine or process that provides data or service for a client, usually by\n  listening for incoming network calls.\n\u003c/p\u003e\n\u003cp\u003e\n  Note that a single machine or piece of software can be both a client and a\n  server at the same time. For instance, a single machine could act as a server\n  for end users and as a client for a database.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"ISP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An \u003cb\u003eInternet service provider\u003c/b\u003e, provides services for accessing, using, or participating in the Internet. \n  ISPs can be organized in various forms, such as commercial, community-owned, non-profit, or otherwise privately owned.\n  The two main types of ISPs are cable or DSL.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Client Server Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The paradigm by which modern systems are designed, which consists of clients\n  requesting data or service from servers and servers providing data or service\n  to clients.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"HTTP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The \u003cb\u003eH\u003c/b\u003eyper\u003cb\u003eT\u003c/b\u003eext \u003cb\u003eT\u003c/b\u003eransfer \u003cb\u003eP\u003c/b\u003erotocol is a very common network protocol implemented on top\n  of TCP. Clients make HTTP requests, and servers respond with a response.\n\u003c/p\u003e\n\u003cp\u003e\n  Requests typically have the following schema: \u003cbr /\u003e\n  \u003cpre\u003ehost: string (example: algoexpert.io)\nport: integer (example: 80 or 443)\nmethod: string (example: GET, PUT, POST, DELETE, OPTIONS or PATCH)\nheaders: \u003ckey, value\u003e pair list (example: \"Content-Type\" =\u003e \"application/json\")\nbody: opaque sequence of bytes\u003c/pre\u003e\n\u003c/p\u003e\n\u003cp\u003e\n  Responses typically have the following schema: \u003cbr /\u003e\n  \u003cpre\u003e\nstatus code: integer (example: 200, 401)\nheaders: \u003ckey, value\u003e pair list (example: \"Content-Length\" =\u003e 1238)\nbody: opaque sequence of bytes\u003c/pre\u003e\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"HTTPS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The \u003cb\u003eH\u003c/b\u003eyper\u003cb\u003eT\u003c/b\u003eext \u003cb\u003eT\u003c/b\u003eransfer \u003cb\u003eP\u003c/b\u003erotocol \u003cb\u003eS\u003c/b\u003eecure is\n  an extension of \u003cb\u003eHTTP\u003c/b\u003e that's used for secure communication online. It\n  requires servers to have trusted certificates (usually\n  \u003cb\u003eSSL certificates\u003c/b\u003e) and uses the Transport Layer Security (\u003cb\u003eTLS\u003c/b\u003e), a\n  security protocol built on top of \u003cb\u003eTCP\u003c/b\u003e, to encrypt data communicated\n  between a client and a server.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"DNS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nShort for Domain Name System, it describes the entities and protocols involved in the\ntranslation from domain names to IP Addresses. Typically, machines make a DNS query to\na well known entity which is responsible for returning the IP address (or multiple ones)\nof the requested domain name in the response.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IP Address","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An address given to each machine connected to the public internet. IPv4\n  addresses consist of four numbers separated by dots: \u003cb\u003ea.b.c.d\u003c/b\u003e where all\n  four numbers are between 0 and 255. Special values include:\n\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cb\u003e127.0.0.1\u003c/b\u003e: Your own local machine. Also referred to as\n    \u003cb\u003elocalhost\u003c/b\u003e.\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cb\u003e192.168.x.y\u003c/b\u003e: Your private network. For instance, your machine and all\n    machines on your private wifi network will usually have the\n    \u003cb\u003e192.168\u003c/b\u003e prefix.\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"network-latency","name":"Network Latency","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"If you've ever experienced lag in a video game, it was most likely due to a combination of high latency and low throughput. And lag sucks.\n\nAs an infrastructure engineer in the making, it is therefore your Call of Duty to master these concepts and join the crusade against high ping rates.\n","video":{"vimeoId":"760178190","duration":7,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"ISP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An \u003cb\u003eInternet service provider\u003c/b\u003e, provides services for accessing, using, or participating in the Internet. \n  ISPs can be organized in various forms, such as commercial, community-owned, non-profit, or otherwise privately owned.\n  The two main types of ISPs are cable or DSL.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Latency","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The time it takes for a certain operation to complete in a system. Most often\n  this measure is a time duration, like milliseconds or seconds. You should know\n  these orders of magnitude:\n\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003cb\u003eReading 1 MB from RAM\u003c/b\u003e: 250 μs (0.25 ms)\u003c/li\u003e\n  \u003cli\u003e\u003cb\u003eReading 1 MB from SSD\u003c/b\u003e: 1,000 μs (1 ms)\u003c/li\u003e\n  \u003cli\u003e\u003cb\u003eTransfer 1 MB over Network\u003c/b\u003e: 10,000 μs (10 ms)\u003c/li\u003e\n  \u003cli\u003e\u003cb\u003eReading 1MB from HDD\u003c/b\u003e: 20,000 μs (20 ms)\u003c/li\u003e\n  \u003cli\u003e\u003cb\u003eInter-Continental Round Trip\u003c/b\u003e: 150,000 μs (150 ms)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Throughput","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The number of operations that a system can handle properly per time unit. For\n  instance the throughput of a server can often be measured in requests per\n  second (RPS or QPS).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Round Trip Time","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Round trip time (RTT) is the measure (in milliseconds) of the latency of a \n    network X 2- that is, the time between initiating a network request (a signal to be \n    sent) plus the amount of time it takes for acknowledgement of that signal \n    having been received (receiving a response). This time delay includes propagation times for the paths \n    between the two endpoints. \n\n    Simply put, it refers to the time taken by a network request to reach a destination and to revert back to the original source.\n    RTT is a crucial tool in determining the health of a network and can be analysed and determined by pinging a certain address. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bandwidth","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The maximum amount of data transmitted over an internet connection in a \n    given amount of time- calculated in megabits \n    per second (Mbps). Note that bandwidth measures volume not speed. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"caching","name":"Caching","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"What do a punching bag and a cache have in common?\n\nThey can both take a hit!  (ง ͠° ل͜ ͡°)ง\n","video":{"vimeoId":"760177442","duration":21,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Cache Hit","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003eWhen requested data is found in a cache.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Cache Miss","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  When requested data could have been found in a cache but isn't. This is\n  typically used to refer to a negative consequence of a system failure or of a\n  poor design choice. For example:\n\u003c/p\u003e\n\u003cp\u003e\n  \u003ci\u003e\n    If a server goes down, our load balancer will have to forward requests to a\n    new server, which will result in cache misses.\n  \u003c/i\u003e\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Cache Eviction Policy","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The policy by which values get evicted or removed from a cache. Popular cache\n  eviction policies include \u003cb\u003eLRU\u003c/b\u003e (least-recently used), \u003cb\u003eFIFO\u003c/b\u003e (first\n  in first out), and \u003cb\u003eLFU\u003c/b\u003e (least-frequently used).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Cache","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A piece of hardware or software that stores data, typically meant to retrieve\n  that data faster than otherwise.\n\u003c/p\u003e\n\u003cp\u003e\n  Caches are often used to store responses to network requests as well as\n  results of computationally-long operations.\n\u003c/p\u003e\n\u003cp\u003e\n  Note that data in a cache can become \u003cb\u003estale\u003c/b\u003e if the main source of truth\n  for that data (i.e., the main database behind the cache) gets updated and the\n  cache doesn't.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"network-layers","name":"Network Layers","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"TCP/IP vs. OSI: The Nerdiest Rivalry Of All Time\n","video":{"vimeoId":"762562175","duration":5,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Ethernet","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nEthernet is the traditional technology for connecting devices in a wired local area network \n(LAN) or wide area network (WAN). It enables devices to communicate with each other via a protocol, which \nis a set of rules or common network language.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"TCP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Network protocol built on top of the Internet Protocol (IP). Allows for\n  ordered, reliable data delivery between machines over the public internet by\n  creating a \u003cb\u003econnection\u003c/b\u003e.\n\u003c/p\u003e\n\u003cp\u003e\n  TCP is usually implemented in the kernel, which exposes \u003cb\u003esockets\u003c/b\u003e to\n  applications that they can use to stream data through an open connection.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"TCP Connection","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nTransmission Control Protocol (TCP) is a connection-oriented communications protocol that facilitates the \nexchange of messages between computing devices in a network. It is the most common protocol in networks that use \nthe Internet Protocol (IP), together they are sometimes referred to as TCP/IP.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IP Address","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An address given to each machine connected to the public internet. IPv4\n  addresses consist of four numbers separated by dots: \u003cb\u003ea.b.c.d\u003c/b\u003e where all\n  four numbers are between 0 and 255. Special values include:\n\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cb\u003e127.0.0.1\u003c/b\u003e: Your own local machine. Also referred to as\n    \u003cb\u003elocalhost\u003c/b\u003e.\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cb\u003e192.168.x.y\u003c/b\u003e: Your private network. For instance, your machine and all\n    machines on your private wifi network will usually have the\n    \u003cb\u003e192.168\u003c/b\u003e prefix.\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"MAC Address","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eMAC Address\u003c/strong\u003e (Media Access Control Address) is a unique identifier assigned to a network\n        interface card (NIC) or other network hardware devices. It is a 48-bit (6-byte) hexadecimal number, typically\n        represented in the format XX:XX:XX:XX:XX:XX, where each pair of characters represents an octet (8 bits). MAC\n        addresses are used at the Data Link Layer (Layer 2) of the OSI Model to enable communication between devices on\n        the same network segment. They ensure that data packets are delivered to the correct destination hardware within\n        a local area network (LAN), enabling devices to distinguish one another at the physical level.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"LLC","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eLLC\u003c/strong\u003e (Logical Link Control) is a sublayer of the Data Link Layer (Layer 2) in the OSI Model,\n        responsible for managing communication between network devices. The LLC sublayer provides a common interface for\n        various Data Link Layer protocols and allows multiple higher-layer protocols to coexist on the same link. It is\n        responsible for error and flow control, as well as multiplexing and demultiplexing data streams from different\n        sources. The LLC sublayer uses Service Access Points (SAPs) to identify the type of protocol being transmitted\n        and to provide a communication path between the higher-level network protocols and the lower-level MAC sublayer.\n    \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"OSI Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eOSI Model\u003c/strong\u003e (Open Systems Interconnection Model) is a conceptual framework that standardizes the\n        functions of a telecommunication or computing system into seven distinct layers. This model was developed by the\n        International Organization for Standardization (ISO) to facilitate communication between different systems and\n        protocols. Each layer performs a specific function in the process of transmitting data between network devices,\n        providing a modular approach to understanding network communication. The seven layers of the OSI Model are:\u003c/p\u003e\n    \u003col\u003e\n        \u003cli\u003e\n            \u003cstrong\u003ePhysical Layer (Layer 1):\u003c/strong\u003e This layer is responsible for the physical connection between\n            devices, including the transmission of raw bitstreams over a physical medium. It encompasses the electrical,\n            mechanical, and functional specifications of the hardware, such as cables, switches, and network interface\n            cards (NICs).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eData Link Layer (Layer 2):\u003c/strong\u003e This layer provides error-free data transfer between adjacent\n            network nodes by establishing, maintaining, and terminating a reliable link. It is responsible for creating\n            and managing frames, as well as handling flow control, error detection, and correction. The Data Link Layer\n            is divided into two sublayers: the Logical Link Control (LLC) and the Media Access Control (MAC).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eNetwork Layer (Layer 3):\u003c/strong\u003e This layer manages the routing of data packets between devices\n            across multiple networks. It is responsible for determining the best path for data transmission, handling\n            packet fragmentation and reassembly, and managing network congestion. Key protocols in this layer include\n            the Internet Protocol (IP) and Internet Control Message Protocol (ICMP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eTransport Layer (Layer 4):\u003c/strong\u003e This layer is responsible for providing reliable and efficient\n            data transmission between devices, ensuring data integrity and error recovery. It manages end-to-end\n            connections, flow control, and congestion control. Two primary protocols in this layer are the Transmission\n            Control Protocol (TCP) and User Datagram Protocol (UDP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eSession Layer (Layer 5):\u003c/strong\u003e This layer is responsible for establishing, maintaining, and\n            terminating connections between applications on different devices. It manages session setup,\n            synchronization, and teardown, allowing multiple applications to communicate simultaneously over the same\n            network connection.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003ePresentation Layer (Layer 6):\u003c/strong\u003e This layer handles data translation, formatting, and\n            encryption for proper communication between applications. It is responsible for ensuring that data is\n            represented in a format that can be understood by both the sender and receiver, as well as compressing and\n            decompressing data, if necessary.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eApplication Layer (Layer 7):\u003c/strong\u003e This layer provides the interface between the user and the\n            network, allowing applications to access network services. It is responsible for various high-level\n            functions, including authentication, file transfer, email, and web browsing. Common protocols in this layer\n            include HTTP, FTP, SMTP, and DNS.\n        \u003c/li\u003e\n    \u003c/ol\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"TCP/IP Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003eThe \u003cstrong\u003eTCP/IP model\u003c/strong\u003e is a conceptual framework for understanding and describing how data\n        communications take place between computing systems in the Internet. TCP/IP stands for Transmission Control\n        Protocol/Internet Protocol and is a suite of communication protocols\n        used to interconnect network devices on the internet. TCP/IP is also used as a communications protocol in a\n        private computer network (an intranet or extranet). It is composed of four layers, each\n        representing a different aspect of the communication process. The layers are: network access, internet,\n        transport, and application. The TCP/IP model provides a standard for communication protocols and allows\n        different systems to communicate with each other over the Internet. The four layers of the TCP/IP Model are:\u003c/p\u003e\n    \u003col\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eLink Layer (corresponds to OSI Layers 1 and 2):\u003c/strong\u003e This layer is responsible for the physical\n            and logical connections between network devices. It covers the hardware and protocols used to transfer data\n            between adjacent network nodes, including cables, switches, network interface cards (NICs), and protocols\n            such as Ethernet and Wi-Fi.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eInternet Layer (corresponds to OSI Layer 3):\u003c/strong\u003e This layer is responsible for the routing and\n            forwarding of data packets between devices across multiple networks. It defines the addressing scheme (IP\n            addresses) and protocols used to transmit data over the Internet. Key protocols in this layer include the\n            Internet Protocol (IP), Address Resolution Protocol (ARP), and Internet Control Message Protocol (ICMP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eTransport Layer (corresponds to OSI Layer 4):\u003c/strong\u003e This layer is responsible for providing\n            reliable and efficient data transmission between devices, ensuring data integrity and error recovery. It\n            manages end-to-end connections, flow control, and congestion control. Two primary protocols in this layer\n            are the Transmission Control Protocol (TCP) and User Datagram Protocol (UDP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eApplication Layer (corresponds to OSI Layers 5, 6, and 7):\u003c/strong\u003e This layer provides the\n            interface between the user and the network, allowing applications to access network services. It is\n            responsible for various high-level functions, including authentication, file transfer, email, and web\n            browsing. Common protocols in this layer include HTTP, FTP, SMTP, and DNS.\n        \u003c/li\u003e\n    \u003c/ol\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"osi-model","name":"OSI Model","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"If you're still confused about the OSI model after watching this video, it's a layer 8 problem.\n","video":{"vimeoId":"762562506","duration":11,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"OSI Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eOSI Model\u003c/strong\u003e (Open Systems Interconnection Model) is a conceptual framework that standardizes the\n        functions of a telecommunication or computing system into seven distinct layers. This model was developed by the\n        International Organization for Standardization (ISO) to facilitate communication between different systems and\n        protocols. Each layer performs a specific function in the process of transmitting data between network devices,\n        providing a modular approach to understanding network communication. The seven layers of the OSI Model are:\u003c/p\u003e\n    \u003col\u003e\n        \u003cli\u003e\n            \u003cstrong\u003ePhysical Layer (Layer 1):\u003c/strong\u003e This layer is responsible for the physical connection between\n            devices, including the transmission of raw bitstreams over a physical medium. It encompasses the electrical,\n            mechanical, and functional specifications of the hardware, such as cables, switches, and network interface\n            cards (NICs).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eData Link Layer (Layer 2):\u003c/strong\u003e This layer provides error-free data transfer between adjacent\n            network nodes by establishing, maintaining, and terminating a reliable link. It is responsible for creating\n            and managing frames, as well as handling flow control, error detection, and correction. The Data Link Layer\n            is divided into two sublayers: the Logical Link Control (LLC) and the Media Access Control (MAC).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eNetwork Layer (Layer 3):\u003c/strong\u003e This layer manages the routing of data packets between devices\n            across multiple networks. It is responsible for determining the best path for data transmission, handling\n            packet fragmentation and reassembly, and managing network congestion. Key protocols in this layer include\n            the Internet Protocol (IP) and Internet Control Message Protocol (ICMP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eTransport Layer (Layer 4):\u003c/strong\u003e This layer is responsible for providing reliable and efficient\n            data transmission between devices, ensuring data integrity and error recovery. It manages end-to-end\n            connections, flow control, and congestion control. Two primary protocols in this layer are the Transmission\n            Control Protocol (TCP) and User Datagram Protocol (UDP).\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eSession Layer (Layer 5):\u003c/strong\u003e This layer is responsible for establishing, maintaining, and\n            terminating connections between applications on different devices. It manages session setup,\n            synchronization, and teardown, allowing multiple applications to communicate simultaneously over the same\n            network connection.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003ePresentation Layer (Layer 6):\u003c/strong\u003e This layer handles data translation, formatting, and\n            encryption for proper communication between applications. It is responsible for ensuring that data is\n            represented in a format that can be understood by both the sender and receiver, as well as compressing and\n            decompressing data, if necessary.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003eApplication Layer (Layer 7):\u003c/strong\u003e This layer provides the interface between the user and the\n            network, allowing applications to access network services. It is responsible for various high-level\n            functions, including authentication, file transfer, email, and web browsing. Common protocols in this layer\n            include HTTP, FTP, SMTP, and DNS.\n        \u003c/li\u003e\n    \u003c/ol\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"tcp-ip-model","name":"TCP/IP Model","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"The magic that makes the internet possible.\n","video":{"vimeoId":"760176761","duration":20,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Encapsulation","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nEncapsulation is the process of adding additional information when data is traveling in TCP/IP model. When data moves \nfrom upper layer to lower layer of TCP/IP protocol stack, during an outgoing transmission, each layer includes a bundle of \nrelevant information called \"header\" along with the actual data.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Decapsulation","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nDecapsulation is the process of opening up encapsulated data that are usually sent in the \nform of packets over a communication network. It can be literally defined as the process of \nopening a capsule, which, in this case, refers to encapsulated or wrapped-up data.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Private IP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A private IP address is a range of non-internet facing IP addresses used in an internal network. Private IP addresses are provided by network devices, such as routers, using network address translation. If you want to find the IP of a device you're connected to, you can use the “netstat -an” command in the terminal.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Public IP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A public IP address is an IP address that your home or business router receives from your ISP and it's used when you access the internet. Public IP addresses are required for any publicly accessible network hardware such as a home router and the servers that host websites. You can find you public IP address by typing what is my IP on google.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Stands for \u003cb\u003eInternet Protocol\u003c/b\u003e. This network protocol outlines how almost\n  all machine-to-machine communications should happen in the world. Other\n  protocols like \u003cb\u003eTCP\u003c/b\u003e, \u003cb\u003eUDP\u003c/b\u003e and \u003cb\u003eHTTP\u003c/b\u003e are built on top of IP.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"HTTP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The \u003cb\u003eH\u003c/b\u003eyper\u003cb\u003eT\u003c/b\u003eext \u003cb\u003eT\u003c/b\u003eransfer \u003cb\u003eP\u003c/b\u003erotocol is a very common network protocol implemented on top\n  of TCP. Clients make HTTP requests, and servers respond with a response.\n\u003c/p\u003e\n\u003cp\u003e\n  Requests typically have the following schema: \u003cbr /\u003e\n  \u003cpre\u003ehost: string (example: algoexpert.io)\nport: integer (example: 80 or 443)\nmethod: string (example: GET, PUT, POST, DELETE, OPTIONS or PATCH)\nheaders: \u003ckey, value\u003e pair list (example: \"Content-Type\" =\u003e \"application/json\")\nbody: opaque sequence of bytes\u003c/pre\u003e\n\u003c/p\u003e\n\u003cp\u003e\n  Responses typically have the following schema: \u003cbr /\u003e\n  \u003cpre\u003e\nstatus code: integer (example: 200, 401)\nheaders: \u003ckey, value\u003e pair list (example: \"Content-Length\" =\u003e 1238)\nbody: opaque sequence of bytes\u003c/pre\u003e\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"HTTPS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The \u003cb\u003eH\u003c/b\u003eyper\u003cb\u003eT\u003c/b\u003eext \u003cb\u003eT\u003c/b\u003eransfer \u003cb\u003eP\u003c/b\u003erotocol \u003cb\u003eS\u003c/b\u003eecure is\n  an extension of \u003cb\u003eHTTP\u003c/b\u003e that's used for secure communication online. It\n  requires servers to have trusted certificates (usually\n  \u003cb\u003eSSL certificates\u003c/b\u003e) and uses the Transport Layer Security (\u003cb\u003eTLS\u003c/b\u003e), a\n  security protocol built on top of \u003cb\u003eTCP\u003c/b\u003e, to encrypt data communicated\n  between a client and a server.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Firewall","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A firewall is a network security device that monitors incoming and outgoing network traffic and permits or blocks data packets based on a set of security rules. Its purpose is to establish a barrier between your internal network and incoming traffic from external sources (such as the internet) in order to block malicious traffic like viruses and hackers.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Three Way Handshake","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nTCP 3-way handshake, also known as a 3-way handshake, is a protocol for establishing a connection between a \nserver and a client in a TCP/IP network. Before the real data communication process begins, both the client and server \nmust exchange synchronization and acknowledgment packets.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IPV4","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    IPv4 or Internet Protocol version 4, address is a 32-bit string of numbers separated by periods. It uniquely identifies a network interface in a device.IPv4 is the first non-experimental Internet Protocol.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IPV6","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    IPv6 is the latest version of the Internet Protocol, which identifies devices across the internet so they can be located. Every device that uses the internet is identified through its own IP address in order for internet communication to work.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dual Stacking","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Dual stack means that devices are able to run IPv4 and IPv6\n    in parallel. It allows hosts to simultaneously reach IPv4 and\n    IPv6 content, so it offers a very flexible coexistence strategy.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Tunneling","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Tunnelling is a protocol for transferring data securely from one network to another. Using a method known as encapsulation, Tunnelling allows private network communications to be sent across a public network, such as the Internet. Encapsulation enables data packets to appear general to a public network when they are private data packets, allowing them to pass unnoticed.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Switches","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A network switch forwards data packets between devices. Switches send packets directly to devices, rather than sending them to networks like a router does. Switches can be hardware devices that manage physical networks, as well as software-based virtual devices.    \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bit","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A bit (binary digit) is the smallest unit of data that a computer can process and store. A bit is always in one of two physical states, similar to an on/off light switch. The state is represented by a single binary value, usually a 0 or 1. However, the state might also be represented by yes/no, on/off or true/false. Bits are stored in memory through the use of capacitors that hold electrical charges. The charge determines the state of each bit, which, in turn, determines the bit's value.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Frames","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A frame is a unit of data. A frame works to help identify data packets used in networking and telecommunications structures. Frames also help to determine how data receivers interpret a stream of data from a source.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Segment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A process is divided into Segments. The chunks that a program is divided into which are not necessarily all of the same sizes are called segments. Segmentation gives user’s view of the process which paging does not give. Here the user’s view is mapped to physical memory.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Ping","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Ping (Packet Internet Groper) is a method for determining communication latency between two networks. Simply put, ping is a method of determining latency or the amount of time it takes for data to travel between two devices or across a network. As communication latency decreases, communication effectiveness improves.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Simple Mail Transfer Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The Simple Mail Transfer Protocol (SMTP) is a technical standard for transmitting electronic mail (email) over a network. Like other networking protocols, SMTP allows computers and servers to exchange data regardless of their underlying hardware or software. Just as the use of a standardized form of addressing an envelope allows the postal service to operate, SMTP standardizes the way email travels from sender to recipient, making widespread email delivery possible.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"File Transfer Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    FTP (File Transfer Protocol) is a network protocol for transmitting files between computers over Transmission Control Protocol/Internet Protocol (TCP/IP) connections. Within the TCP/IP suite, FTP is considered an application layer protocol.\n    In an FTP transaction, the end user's computer is typically called the local host. The second computer involved in FTP is a remote host, which is usually a server. Both computers need to be connected via a network and configured properly to transfer files via FTP.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Address Resolution Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Address Resolution Protocol (ARP) is a procedure for mapping a dynamic IP address to a permanent physical machine address in a local area network (LAN). The physical machine address is also known as a media access control (MAC) address.\n    The job of ARP is essentially to translate 32-bit addresses to 48-bit addresses and vice versa. This is necessary because IP addresses in IP version 4 (IPv4) are 32 bits, but MAC addresses are 48 bits.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Internet Control Message Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The Internet Control Message Protocol (ICMP) is a network layer protocol used by network devices to diagnose network communication issues. ICMP is mainly used to determine whether or not data is reaching its intended destination in a timely manner. Commonly, the ICMP protocol is used on network devices, such as routers. ICMP is crucial for error reporting and testing, but it can also be used in distributed denial-of-service (DDoS) attacks.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"transport-protocols","name":"Transport Protocols","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"UDP bar packet A into walks.\n","video":{"vimeoId":"760176000","duration":24,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Stateful","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA server or process is called \"stateful\" when it derives its\nfunctionality from storing and retrieving things from disk.\nDatabases are primary case studies for stateful servers. Because of this\npersistence requirement, it's much more difficult to run and manage\nstateful servers compared to \u003cb\u003eStateless\u003c/b\u003e servers because they\ncan't be stopped and restarted on any physical machine.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Stateless","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA server is usually called \"stateless\" if it does not \u003ci\u003erequire\u003c/i\u003e\nstate to be persisted to disk in order to run successfully. Although\nmany server process typically hold some state in memory including\ncaching layers for instance, this typically means that we can\nrun the server process the same way on any machine, and move\nit around whenever we want. This contrasts with \u003cb\u003eStateful\u003c/b\u003e\nprocesses.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Fragment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A fragment is a piece of a data packet that has been broken into smaller pieces in order to accommodate the maximum transmission unit (MTU) size of a network.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Byte","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A byte is a unit of data that is eight binary digits long. A byte is the unit most computers use to represent a character such as a letter, number or typographic symbol.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Metadata","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Metadata is data about data. Metadata enriches the data with information that makes it easier to find, use and manage.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Ethernet Frame","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    When transmitting data over Ethernet, the Ethernet frame is primarily responsible for the correct rulemaking and successful transmission of data packets. Essentially, data sent over Ethernet is carried by the frame. An Ethernet frame is between 64 bytes and 1,518 bytes big, depending on the size of the data to be transported.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Header","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The header is the initial portion of a packet or a frame. The header contains control information such as addressing, routing, and protocol version. The format of this information depends on the protocol being used.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Firewall","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A firewall is a network security device that monitors incoming and outgoing network traffic and permits or blocks data packets based on a set of security rules. Its purpose is to establish a barrier between your internal network and incoming traffic from external sources (such as the internet) in order to block malicious traffic like viruses and hackers.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Congestion Control","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Congestion Control is a mechanism that controls the entry of data packets into the network, enabling a better use of a shared network infrastructure and avoiding congestive collapse. Congestive-Avoidance Algorithms (CAA) are implemented at the TCP layer as the mechanism to avoid congestive collapse in a network.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Data Payload","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Data payload of a specific network packet or other protocol data unit (PDU) is the transmitted data sent by communicating endpoints. Network protocols also specify the maximum length allowed for packet payloads. The payload is then wrapped in a packet that contains information such as media access control address and IP information, quality of service tags, time-to-live data and checksums.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IP Datagram","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    An IP datagram is a self-contained, independent entity of data carrying sufficient information to be routed from the source to the destination computer without reliance on earlier exchanges between this source and destination computer and the transporting network.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"MSS Value","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    MSS (maximum segment size) limits the size of packets, or small chunks of data, that travel across a network, such as the Internet. All data that travels over a network is broken up into packets. Packets have several headers attached to them that contain information about their contents and destination. MSS measures the non-header portion of a packet, which is called the payload.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"PPP","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Point-to-Point Protocol (PPP) is a TCP/IP protocol that is used to connect one computer system to another. Computers use PPP to communicate over the telephone network or the Internet. A PPP connection exists when two systems physically connect through a telephone line.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Check Sum","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A checksum is a value that represents the number of bits in a transmission message and is used by IT professionals to detect high-level errors within data transmissions. Prior to transmission, every piece of data or file can be assigned a checksum value after running a cryptographic hash function. The term checksum is also sometimes seen as hash value.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Sequence Number","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The sequence number is a counter used to keep track of every byte sent outward by a host. If a TCP packet contains 1400 bytes of data, then the sequence number will be increased by 1400 after the packet is transmitted.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Cryptographic Hash Function","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A cryptographic hash function is an algorithm that takes an arbitrary amount of data input—a credential—and produces a fixed-size output of enciphered text called a hash value, or just “hash.” That enciphered text can then be stored instead of the password itself, and later used to verify the user.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"routing","name":"Routing","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"An IPv4 address walks into a bar and yells, \"Bartender, pour me a CIDR! I'm exhausted!\"\n","video":{"vimeoId":"781803829","duration":21,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Network","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA network consists of two or more computers that are linked in order to share resources \n(such as printers and CDs), exchange files, or allow electronic communications. The computers \non a network may be linked through cables, telephone lines, radio waves, satellites, or infrared light beams.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Protocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA protocol is a set of rules for formatting and processing data. Network protocols are \nlike a common language for computers. The computers within a network may use vastly different \nsoftware and hardware; however, the use of protocols enables them to communicate with each other regardless.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Maximum Transmission Unit","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    MTU is the largest packet or frame size, specified in octets (eight-bit bytes) that can be sent in a packet- or frame-based network. The internet’s transmission control protocol (TCP) uses the MTU to determine the maximum size of each packet in any transmission. MTU is usually associated with the Ethernet protocol, where a 1500-byte packet is the largest allowed.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Round Trip Time","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Round trip time (RTT) is the measure (in milliseconds) of the latency of a \n    network X 2- that is, the time between initiating a network request (a signal to be \n    sent) plus the amount of time it takes for acknowledgement of that signal \n    having been received (receiving a response). This time delay includes propagation times for the paths \n    between the two endpoints. \n\n    Simply put, it refers to the time taken by a network request to reach a destination and to revert back to the original source.\n    RTT is a crucial tool in determining the health of a network and can be analysed and determined by pinging a certain address. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Hops","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A hop refers to the number of routers that a packet passes through from its source to its destination. Sometimes a hop is counted when a packet passes through other hardware on a network, like switches, access points, and repeaters.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"troubleshooting","name":"Troubleshooting","module":"Networking","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Have you tried turning it off and on again?\n","video":{"vimeoId":"780371606","duration":23,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Timeout","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A server connection timeout means that a server is taking too long to reply to a data request made from another device. Timeouts are not a reply message so  they show up when there isn't a reply and a server request is not fulfilled in a predetermined length of time. Timeout errors can happen for a number of reasons. The server, the requesting device, the network hardware and even an Internet connection can be at fault.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"IP Config","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Ipconfig displays all current TCP/IP network configuration values and refreshes Dynamic Host Configuration Protocol (DHCP) and Domain Name System (DNS) settings. Used without parameters, ipconfig displays Internet Protocol version 4 (IPv4) and IPv6 addresses, subnet mask, and default gateway for all adapters.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"NS Lookup","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name’s IP addresses.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"operating-systems","name":"Operating Systems","module":"Operating Systems","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Which operating system does Iron Man hate the most?\n\nThanOS.\n","video":{"vimeoId":"780387933","duration":15,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Operating System","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Software that acts as an interface between the hardware components of a computer and the user.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Hardware Peripherals","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Hardware peripherals are devices that are not the computer's core architecture involved in memory and processing. Peripherals include input hardware, output hardware and storage devices. A typical desktop computer could include: inputs - mouse, key\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Random Access Memory","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    RAM (random access memory) is a computer's short-term memory, where the data that the processor is currently using is stored. Your computer can access RAM memory much faster than data on a hard disk, SSD, or other long-term storage device, which is why RAM capacity is critical for system performance.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Git","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nGit is a free and open source distributed version control system designed to handle everything \nfrom small to very large projects with speed and efficiency. It keeps track of projects and files \nas they change over time with the help of different contributors.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.git-scm.com/","kinds":["tech"]},{"name":"Queue","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA FIFO queue is a queue that operates on the first-in, first-out principle. \nThis is also referred to as the first-come, first-served principle.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Disk","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nUsually refers to either HDD (hard-disk drive) or SSD (solid-state drive). Data written to disk \nwill persist through power failures and general machine crashes. Disk is also referred to as non-volatile storage.\nSSD is far faster than HDD but also far more expensive from a financial point of view. Because of that, HDD will\ntypically be used for data that's rarely accessed or updated, but that's stored for a long time, and SSD will be used\nfor data that's frequently accessed and updated.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Fork","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A fork is a Unix or Linux system call to create a new process from an existing running process. The new process is a child process of the calling parent process.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Exec","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The exec system call is used to execute a file which is residing in an active process. When exec is called the previous executable file is replaced and new file is executed.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"System Call","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A system call is the programmatic way in which a computer program requests a service from the kernel of the operating system it is executed on. A system call is a way for programs to interact with the operating system. A computer program makes a system call when it makes a request to the operating system’s kernel. System call provides the services of the operating system to the user programs via Application Program Interface(API).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Block Size","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A block is the largest contiguous amount of disk space that can be allocated to a file and is therefore the largest amount of data that can be accessed in a single I/O operation. The physical block size is usually 512 bytes, which is the size of the smallest block that the disk controller can read or write.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Kernel","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The kernel is the essential foundation of a computer's operating system. It is the core that provides basic services for all other parts of the OS. It is the main layer between the OS and underlying computer hardware, and it helps with tasks such as process and memory management, file systems, device control and networking.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Kernel Mode","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Kernel mode refers to the processor mode that enables software to have full and unrestricted access to the system and its resources. The OS kernel and kernel drivers, such as the file system driver, are loaded into protected memory space and operate in this highly privileged kernel mode.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"User Mode","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    User mode refers to the processor mode that enables user-based applications, such as a word processor or video game, to load and execute. The kernel prepares the memory space and resources for that application's use and launches the application within that user memory space.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Virtual Memory","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Virtual memory is a memory management technique where secondary memory can be used as if it were a part of the main memory. Virtual memory is a common technique used in a computer's operating system (OS). Virtual memory uses both hardware and software to enable a computer to compensate for physical memory shortages, temporarily transferring data from random access memory (RAM) to disk storage. Mapping chunks of memory to disk files enables a computer to treat secondary memory as though it were main memory.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Scheduling","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nScheduling is the act of allocating CPU time to the processes that \nare currently in the ready queue. A single process is always running\non the CPU thanks to the operating system's scheduling of the process.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Batch processing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Batch processing is when a computer processes a number of tasks that it has collected in a group. It is designed to be a completely automated process, without human intervention.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"MMU","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A memory management unit (MMU) is a computer hardware component that handles all memory and caching operations associated with the processor. In other words, the MMU is responsible for all aspects of memory management. It's usually integrated into the processor, although, in some systems, it occupies a separate integrated circuit (IC).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"processes-and-threads","name":"Processes And Threads","module":"Operating Systems","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Sitting right at the intersection of software and hardware, the topic of this video will give you a glimpse into how these two worlds collide.\n","video":{"vimeoId":"780394079","duration":14,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Central Processing Unit","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nThe central processing unit (CPU) is a computer's brain, it has\nall the circuitry required to process input, store data, and output\nresults. The CPU is continually following computer program instructions\nthat tell it which data to process and how to process it.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Stack","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A stack is an associate ordered a set of components, only one of that (last added) are often accessed at a time. The point of access is named the highest of the stack. The number of components within the stack, or length of the stack, is variable. Items could solely be side to or deleted from the highest of the stack.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Heap","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A heap is a special Tree-based data structure in which the tree is a complete binary tree.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"LIFO","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    LIFO is an abbreviation for last in, first out. It is a method for handling data structures where the first element is processed last and the last element is processed first.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Pointer","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A stack pointer is a small register that stores the memory address of the last data element added to the stack or, in some cases, the first available address in the stack. A stack is a specialized buffer that is used by a program's functions to store data such as parameters, local variables and other function-related information. The stack pointer ensures that the program always adds data to the right location in the stack.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Memory","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nShort for Random Access Memory (RAM). Data stored in memory will be lost when \nthe process that has written that data dies. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"OS Memory Manager","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Memory management is the functionality of an operating system which handles or manages primary memory and moves processes back and forth between main memory and disk during execution. Memory management keeps track of each and every memory location, regardless of either it is allocated to some process or it is free. It checks how much memory is to be allocated to processes. It decides which process will get memory at what time.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Processes","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nIn essence, a process is a program that is being run. A process's execution must proceed in a \nsequential manner. As the fundamental unit of work to be implemented in the system, a process \nis an entity that represents it. Simply put, we write our computer programs in text files, and \nwhen we run them, they turn into processes that carry out all the duties they specify.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Threads","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA thread is a single sequential flow of execution of tasks of a process so\nit is also known as thread of execution or thread of control. There is a way of \nthread execution inside the process of any operating system. Apart from this, \nthere can be more than one thread inside a process.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Concurrency","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nThe simultaneous execution of several instruction sequences is referred to\nas concurrency. Multiple process threads running simultaneously is a \nphenomenon that happens in operating systems.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Multiprocessing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Multiprocessing is the coordinated processing of programs by more than one computer processor. Multiprocessing is a general term that can mean the dynamic assignment of a program to one of two or more computers working in tandem or can involve multiple computers working on the same program at the same time (in parallel).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Parallel Processing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Parallel processing is a method in computing of running two or more processors (CPUs) to handle separate parts of an overall task. Breaking up different parts of a task among multiple processors will help reduce the amount of time to run a program. Any system that has more than one CPU can perform parallel processing, as well as multi-core processors which are commonly found on computers today.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"PCB","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A printed circuit board (PCB) is the board base for physically supporting and wiring the  surface-mounted and socketed components in most electronics. In applications where fine conductive traces are needed, such as computers, PCBs are made by a photolithographic process, in a larger scale version of the way conductive paths in processors are made. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Register","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A processor register is one of a small set of data holding places that are part of the computer processor. A register may hold an instruction, a storage address, or any kind of data (such as a bit sequence or individual characters). Some instructions specify registers as part of the instruction.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"locks-and-concurrency-issues","name":"Locks And Concurrency Issues","module":"Operating Systems","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Knock knock.\nRace condition.\nWho's there?\n","video":{"vimeoId":"780388581","duration":33,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Locks","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nLocking is a technique for coordinating possibly concurrent usage of a database\nor other shared resource in an operating system. In order to guarantee that operations\ntake place in the proper order (when they don't, the situation is known as a race condition),\nan operating system may enforce locking or some other technique.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Deadlock","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A deadlock is a situation in which processes block each other due\n  to resource acquisition, and neither process progresses while waiting for resources\n  held by  other processes. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Livelock","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A livelock is a situation where a request for an exclusive lock is \n  repeatedly denied because there are too many overlapping shared locks. In a\n  livelock scenario, processes continuously change the state of their \n  resources while blocking each other and waiting indefinitely.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Critical Section","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Critical Section is the part of a program which tries to access shared resources. That resource may be any resource in a computer like a memory location, Data structure, CPU or any IO device. The critical section cannot be executed by more than one process at the same time. The operating system faces the difficulties in allowing and disallowing the processes from entering the critical section.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Race Condition","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A race condition is an undesirable situation that occurs when a device or system attempts to perform two or more operations at the same time, but because of the nature of the device or system, the operations must be done in the proper sequence to be done correctly. Race conditions occur when two computer program processes, or threads, attempt to access the same resource at the same time and cause problems in the system.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Starvation","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Starvation is the problem that occurs when high priority processes keep executing and low priority processes get blocked for indefinite time. In heavily loaded computer system, a steady stream of higher-priority processes can prevent a low-priority process from ever getting the CPU. In starvation resources are continuously utilized by high priority processes.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Mutual Exclusion","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Mutual exclusion is a property of process synchronization which states that “no two processes can exist in the critical section at any given point of time”. Any process synchronization technique being used must satisfy the property of mutual exclusion, without which it would not be possible to get rid of a race condition. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Circular Wait","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Circular waiting happens when one process is waiting for the resource, which is held by the second process, which is also waiting for the resource held by the third process etc.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"No Preemption","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    No preemption happens if a process that is holding some resources requests another resource that cannot be immediately allocated to it, then all resources currently being held are released implicitly. Then the preempted resources are added to the list of resources for which the process is waiting.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"scheduling-and-context-switching","name":"Scheduling And Context Switching","module":"Operating Systems","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"This video is the longest and perhaps most important one in the entire course, so grab a coffee—you might wanna make it Irish for this, we won't judge—and hit that play button!\n","video":{"vimeoId":"783244039","duration":46,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"CPU Burst","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  CPU burst is the amount of time, a process uses the CPU until it starts waiting for some input or interrupted by some other process.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IO Burst","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    I/O burst is the amount of time, a process waits for input-output before needing CPU time.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Queue","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA FIFO queue is a queue that operates on the first-in, first-out principle. \nThis is also referred to as the first-come, first-served principle.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Context Switching","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Context switching is a process in which the CPU switches\n  from one process or task to another. In this phenomenon,\n  the kernel suspends the execution of a process that is in\n  the running state, and the CPU runs another process that is  in the ready state. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dispatcher","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A dispatcher is a special program that comes into play after the scheduler. When the short term scheduler selects from the ready queue, the Dispatcher performs the task of allocating the selected process to the CPU. A running process goes to the waiting state for IO operation etc., and then the CPU is allocated to some other process.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Scheduler","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Schedulers are special system software that handles process scheduling in various ways. Their main task is to select the jobs to be submitted into the system and to decide which process to run. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"PCB","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A printed circuit board (PCB) is the board base for physically supporting and wiring the  surface-mounted and socketed components in most electronics. In applications where fine conductive traces are needed, such as computers, PCBs are made by a photolithographic process, in a larger scale version of the way conductive paths in processors are made. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Preemptive Scheduling","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Preemptive scheduling is used when a process switches from running state to ready state or from the waiting state to ready state. The resources are allocated to the process for a limited amount of time and then taken away, and the process is again placed back in the ready queue if that process still has CPU burst time remaining. That process stays in the ready queue till it gets its next chance to execute. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Non Preemptive Scheduling","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Non-preemptive Scheduling is used when a process terminates, or a process switches from running to the waiting state. In this scheduling, once the resources are allocated to a process, the process holds the CPU till it gets terminated or reaches a waiting state. In the case of non-preemptive scheduling does not interrupt a process running CPU in the middle of the execution. Instead, it waits till the process completes its CPU burst time, and then it can allocate the CPU to another process. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"unix-linux-systems","name":"Unix/Linux Systems","module":"Operating Systems","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Microsoft has left the chat.\n","video":{"vimeoId":"781805725","duration":16,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Operating System","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Software that acts as an interface between the hardware components of a computer and the user.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Linux","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eLinux\u003c/strong\u003e is a free and open-source operating system based\n        on the Unix operating system. It is widely used in web servers, cloud\n        computing, and embedded systems due to its stability, security, and\n        flexibility. Linux is known for its command-line interface and support\n        for a wide range of programming languages.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Linux Directories","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eLinux Directories\u003c/strong\u003e refer to the hierarchical structure of directories (also known as folders)\n        within the Linux filesystem. The organization of these directories follows the Filesystem Hierarchy Standard\n        (FHS), which defines the naming, location, and purpose of various directories to ensure consistency and\n        compatibility across different Linux distributions. The top-level directories in a typical Linux filesystem are\n        as follows:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/bin:\u003c/strong\u003e Contains essential user command binaries, such as common utilities and applications,\n            that are required for basic system operation and are accessible to all users.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/boot:\u003c/strong\u003e Contains files related to the boot process, including the Linux kernel, initial RAM\n            disk images, and bootloader configuration files.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/dev:\u003c/strong\u003e Contains device files, which are special files that represent hardware devices (such\n            as hard drives, terminals, and printers) and enable interaction with these devices through the filesystem.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/etc:\u003c/strong\u003e Contains system-wide configuration files and directories, which are used to configure\n            various aspects of the system, including hardware devices, network settings, and services.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/home:\u003c/strong\u003e Contains the home directories of individual users, where users can store their\n            personal files, documents, and settings.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/lib:\u003c/strong\u003e Contains shared library files and kernel modules that are needed to run the system\n            and support the binaries in /bin and /sbin.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/media:\u003c/strong\u003e Serves as a mount point for removable media, such as USB drives, CD-ROMs, and\n            external hard drives.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/mnt:\u003c/strong\u003e Serves as a temporary mount point for filesystems and devices, typically used for\n            mounting network shares or additional storage devices.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/opt:\u003c/strong\u003e Contains optional application software packages, which are usually installed by the\n            system administrator or third-party vendors.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/proc:\u003c/strong\u003e Represents a virtual filesystem that provides a view of the system's process and\n            kernel information, exposing various data structures and statistics to user space.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/root:\u003c/strong\u003e Serves as the home directory for the root user, who has administrative privileges on\n            the system.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/sbin:\u003c/strong\u003e Contains system binaries, which are essential utilities and applications required\n            for system maintenance and administration, typically used by the root user or during the boot process.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/srv:\u003c/strong\u003e Contains data for services provided by the system, such as web, FTP, and file\n            servers.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/sys:\u003c/strong\u003e Represents a virtual filesystem that exposes information about the system's hardware\n            devices and their associated drivers, allowing users and applications to query and configure the hardware.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/tmp:\u003c/strong\u003e Provides temporary storage for files that are created by applications and users, with\n            the expectation that these files may be deleted after a system reboot or after a certain period of time.\n        \u003c/li\u003e\n        \u003cli\u003e\n            \u003cstrong\u003e/usr:\u003c/strong\u003e Contains shareable, read-only data, such as application binaries, libraries, and\n            documentation, which are used by multiple users on the system.\n        \u003c/li\u003e\n        \u003cli\u003e\n    \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"virtual-machines","name":"Virtual Machines","module":"Virtualization","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Virtual machines are virtually virtual machines.\n","video":{"vimeoId":"783309728","duration":7,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Host","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA host virtual machine is the server component of a virtual machine (VM), the underlying \nhardware that provides computing resources to support a particular guest virtual machine (guest VM). \nTogether, the host virtual machine and guest virtual machine make up a virtual machine server.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Guest","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA guest virtual machine (guest VM) is the software component of a virtual machine (VM), an \nindependent instance of an operating system called a guest operating system and its associated software and information.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bare Metal","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nThe term bare metal refers to the fact that there is no operating system between the \nvirtualization software and the hardware. The virtualization software resides on the bare metal \nor the hard disk of the hardware, where the operating system is usually installed.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Virtual Machines","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA Virtual Machine (VM) is a compute resource that uses software instead of a physical computer \nto run programs and deploy apps. One or more virtual “guest” machines run on a physical “host” machine. Each \nvirtual machine runs its own operating system and functions separately from the other VMs, even when \nthey are all running on the same host.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Hypervisor","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA hypervisor, also known as a virtual machine monitor or VMM, is software that \ncreates and runs virtual machines (VMs). A hypervisor allows one host computer to \nsupport multiple guest VMs by virtually sharing its resources, such as memory and processing. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"containers","name":"Containers","module":"Virtualization","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"This video is a container that contains information about containers.\n\nWe know, we know, we go overboard with the silly puns. We just can't...contain ourselves.\n","video":{"vimeoId":"783304299","duration":12,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Git","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nGit is a free and open source distributed version control system designed to handle everything \nfrom small to very large projects with speed and efficiency. It keeps track of projects and files \nas they change over time with the help of different contributors.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.git-scm.com/","kinds":["tech"]},{"name":"YAML","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003eA file format mostly used in configuration. Example:\u003c/p\u003e\n\u003cpre\u003e\nversion: 1.0\nname: AlgoExpert Configuration\n\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Microservices","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nMicroservices are an architectural and organizational approach to software development where \nsoftware is composed of small independent services that communicate over well-defined APIs. These services \nare owned by small, self-contained teams.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Containers","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA container is a standard unit of software that packages up code and all \nits dependencies so the application runs quickly and reliably from one computing \nenvironment to another.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"docker-and-kubernetes","name":"Docker And Kubernetes","module":"Virtualization","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Also known as \"Moby Dick and Captain Ahab\".\n","video":{"vimeoId":"783311249","duration":23,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Load Balancer","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A type of \u003cb\u003ereverse proxy\u003c/b\u003e that distributes traffic across servers. Load\n  balancers can be found in many parts of a system, from the DNS layer all the\n  way to the database layer.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Inheritance","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eInheritance\u003c/strong\u003e is a fundamental concept in object-oriented programming (OOP) that allows one class\n        to inherit properties and methods from another class, promoting code reusability and modularity. Inheritance\n        enables the creation of a hierarchy of classes, where a subclass can inherit characteristics from a parent class\n        (also called superclass or base class) and then extend or override them as needed. This relationship between\n        classes allows the subclass to inherit the attributes and behaviors of the parent class while also providing the\n        ability to define or modify its own unique attributes and behaviors.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Sandbox","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eSandbox\u003c/strong\u003e refers to a secure and isolated environment within a computer system where applications,\n        code, or untrusted data can be executed or analyzed without affecting the host system or its resources.\n        Sandboxing is a common security technique used to prevent malicious software, untested code, or potentially\n        harmful user actions from causing harm to the system or its data. Sandboxes can be implemented using virtual\n        machines, containers, or other isolation mechanisms, depending on the desired level of security and resource\n        isolation.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Docker","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nDocker provides the ability to package and run an application in a loosely isolated environment \ncalled a container. The isolation and security allows you to run many containers simultaneously on a given host.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.docker.com/","kinds":["tech"]},{"name":"Dockerfile","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nDockerfile is a script, composed of various commands (instructions) and arguments listed \nsuccessively to automatically perform an action on a base image in order to create a new one. It is \nused to build or run Docker image by giving some instructions to customize an existing Docker image based on our \nrequirement, in an automated way with running a Docker container.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.docker.com/","kinds":["tech"]},{"name":"Docker Compose","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nDocker Compose is a tool that was developed to help define and share multi-container \napplications. With Compose, we can create a YAML file to define the services and with a \nsingle command, can spin everything up or tear it all down.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.docker.com/","kinds":["tech"]},{"name":"Kubernetes","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nKubernetes is an open source tool for managing Linux containers in \nenvironments with private, public, and hybrid clouds. Kubernetes is a tool that businesses \ncan use to manage microservice architectures. Most cloud providers allow for the deployment of containers and kubernetes.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.kubernetes.io/","kinds":["tech"]},{"name":"Kubernetes Cluster","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eKubernetes Cluster\u003c/strong\u003e is a set of machines, called nodes, that are orchestrated by the Kubernetes\n        container management system to deploy, scale, and manage containerized applications. A Kubernetes cluster\n        consists of a control plane, which manages the overall state of the cluster and coordinates all its activities,\n        and worker nodes, which run containerized applications. The control plane includes components such as the API\n        server, etcd datastore, and controller manager, while worker nodes host container runtime engines and the\n        kubelet agent, which communicates with the control plane. Kubernetes clusters enable developers and operators to\n        manage the deployment, scaling, and high availability of containerized applications in a consistent and\n        automated manner.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Kubelet","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eKubelet\u003c/strong\u003e is a core component of the Kubernetes container orchestration system that runs on each\n        worker node in a Kubernetes cluster. The primary responsibility of the kubelet is to ensure that the\n        containerized applications specified in the pod specifications are running and healthy on its associated node.\n        The kubelet communicates with the Kubernetes control plane to receive the desired state of the pods and then\n        interacts with the container runtime engine, such as Docker or containerd, to create, start, stop, and monitor\n        containers accordingly. The kubelet also reports the status of the pods and their containers back to the control\n        plane and performs periodic health checks to ensure that they are functioning correctly.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Pods","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003ePods\u003c/strong\u003e are the smallest and most basic unit in the Kubernetes container orchestration system. A\n        pod represents a single instance of a running process in a cluster and can contain one or more containers.\n        Containers within a pod share the same network namespace, which means they have the same IP address and can\n        communicate using 'localhost'. They can also share the same storage volumes, allowing them to read and write\n        data from shared filesystems. Pods are designed to be ephemeral and disposable, with Kubernetes automatically\n        handling the creation, scaling, and recovery of pods based on the desired state defined by the user.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Nodes","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eNodes\u003c/strong\u003e are the physical or virtual machines that form the foundation of a Kubernetes cluster.\n        Each node runs the containerized applications and workloads managed by Kubernetes. Nodes can be classified into\n        two types: worker nodes and control plane nodes. Worker nodes are responsible for running the actual application\n        containers (organized in pods), while control plane nodes host the components that manage and control the\n        overall state of the cluster, such as the API server, etcd datastore, and controller manager. Each worker node\n        runs a container runtime engine, such as Docker or containerd, and the kubelet agent, which communicates with\n        the control plane to ensure the desired state of the pods is maintained.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"microservices","name":"Microservices","module":"Virtualization","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Every engineering manager's favorite buzzword.\n","video":{"vimeoId":"781806248","duration":7,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Microservice","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  When a system is made up of many small web services that can be compiled and\n  deployed independently. This is usually thought of as a counterpart of\n  \u003cb\u003emonoliths\u003c/b\u003e.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Monolith","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  When a system is primarily made up of a single large web application that is\n  compiled and rolled out as a unit. Typically a counterpart of\n  \u003cb\u003emicroservices\u003c/b\u003e. Companies sometimes try to split up this monolith into\n  microservices once it reaches a very large size in an attempt to increase\n  \u003cb\u003edeveloper productivity\u003c/b\u003e.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"databases","name":"Databases","module":"Databases","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Databases are of paramount importance to computing and web development, and there is no better database to store information about databases in than the most powerful database of them all: your brain.\n","video":{"vimeoId":"783822544","duration":5,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Database","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nDatabases are programs that either use disk or memory to do 2 core things: record data and query data. In general,\nthey are themselves servers that are long lived and interact with the rest of your application through network calls,\nwith protocols on top of TCP or even HTTP. Some databases only keep records in memory, and the users of such databases\nare aware of the fact that those recordsmay be lost forever if the machine or process dies.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Redis","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An in-memory key-value store. Does offer some persistent storage options but is\n  typically used as a really fast, best-effort caching solution. Redis is also often\n  used to implement \u003cb\u003erate limiting\u003c/b\u003e.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://redis.com/","kinds":["tech"]},{"name":"Postgres","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A relational database that uses a dialect of SQL called PostgreSQL. Provides\n  ACID transactions.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.postgresql.org/","kinds":["tech"]}],"section":"","hasCodeExample":false},{"uid":"relational-databases","name":"Relational Databases","module":"Databases","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"A SQL query walks into a bar, sees two tables, and asks them, \"May I join you?\"\n","video":{"vimeoId":"783822695","duration":6,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Relational Database","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A type of structured database in which data is stored following a tabular\n  format; often supports powerful querying using SQL.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"CRUD","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Stands for \u003cb\u003eCreate\u003c/b\u003e, \u003cb\u003eRead\u003c/b\u003e, \u003cb\u003eUpdate\u003c/b\u003e,\n  \u003cb\u003eDelete\u003c/b\u003e Operations. These four operations often serve as the bedrock of a\n  functioning system and therefore find themselves at the core of many APIs.\n  The term \u003cb\u003eCRUD\u003c/b\u003e is very likely to come up during an API-design interview.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SQL","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Structured Query Language. Relational databases can be used using a derivative\n  of SQL such as PostgreSQL in the case of Postgres.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SQL Database","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Any database that supports SQL. This term is often used synonymously with\n  \"Relational Database\", though in practice, not \u003ci\u003eevery\u003c/i\u003e relational\n  database supports SQL.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Database Index","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A special auxiliary data structure that allows your database to perform\n  certain queries much faster. Indexes can typically only exist to reference\n  structured data, like data stored in relational databases. In practice, you\n  create an index on one or multiple columns in your database to greatly speed\n  up \u003cb\u003eread\u003c/b\u003e queries that you run very often, with the downside of slightly\n  longer \u003cb\u003ewrites\u003c/b\u003e to your database, since writes have to also take place in\n  the relevant index.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"ACID Transaction","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A type of database transaction that has four important properties:\n\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cb\u003eAtomicity\u003c/b\u003e: The operations that constitute the transaction will either\n    all succeed or all fail. There is no in-between state.\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cb\u003eConsistency\u003c/b\u003e: The transaction cannot bring the database to an invalid\n    state. After the transaction is committed or rolled back, the rules for each\n    record will still apply, and all future transactions will see the effect of\n    the transaction. Also named \u003cb\u003eStrong Consistency\u003c/b\u003e.\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cb\u003eIsolation\u003c/b\u003e: The execution of multiple transactions concurrently will\n    have the same effect as if they had been executed sequentially.\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cb\u003eDurability\u003c/b\u003e: Any committed transaction is written to non-volatile\n    storage. It will not be undone by a crash, power loss, or network partition.\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Postgres","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A relational database that uses a dialect of SQL called PostgreSQL. Provides\n  ACID transactions.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.postgresql.org/","kinds":["tech"]}],"section":"","hasCodeExample":false},{"uid":"non-relational-databases","name":"Non-Relational Databases","module":"Databases","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Why did the SQL database and the NoSQL database break up?\n\nBecause they didn't share any key values.\n","video":{"vimeoId":"780835628","duration":6,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"NoSQL Database","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003eAny database that is not SQL-compatible is called NoSQL.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Graph Database","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A type of database that stores data following the graph data model. Data\n  entries in a graph database can have explicitly defined relationships, much\n  like nodes in a graph can have edges.\n\u003c/p\u003e\n\u003cp\u003e\n  Graph databases take advantage of their underlying graph structure to perform\n  complex queries on deeply connected data very fast.\n\u003c/p\u003e\n\u003cp\u003e\n  Graph databases are thus often preferred to relational databases when dealing\n  with systems where data points naturally form a graph and have multiple levels\n  of relationships—for example, social networks.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"JSON","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003eA file format heavily used in APIs and configuration. Stands for \u003cb\u003eJ\u003c/b\u003eava\u003cb\u003eS\u003c/b\u003ecript \u003cb\u003eO\u003c/b\u003ebject \u003cb\u003eN\u003c/b\u003eotation\u003c/b\u003e. Example:\u003c/p\u003e\n\u003cpre\u003e{\n   \"version\": 1.0,\n   \"name\": \"AlgoExpert Configuration\"\n}\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Key Value Store","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A Key-Value Store is a flexible NoSQL database that's often used for caching\n  and dynamic configuration. Popular options include DynamoDB, Etcd, Redis, and\n  ZooKeeper.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Mongo DB","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A NoSQL database with powerful querying through a JavaScript-like language.\n  Consistency guarantees depend on the settings that the database is setup with.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.mongodb.com/","kinds":["tech"]}],"section":"","hasCodeExample":false},{"uid":"migration-and-provider-solutions","name":"Migration And Provider Solutions","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Many people incorrectly believe clouds to be patches of floating water vapor, when they are actually colloids made up of millions upon millions of physical \u003cs\u003ewater droplets\u003c/s\u003e linux servers.\n","video":{"vimeoId":"783822844","duration":26,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Monitoring","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The process of having visibility into a system's key metrics, monitoring is\n  typically implemented by collecting important events in a system and\n  aggregating them in human-readable charts.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Nines","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Typically refers to percentages of uptime. For example, 5 nines of\n  availability means an uptime of 99.999% of the time. Below are the downtimes\n  expected per year depending on those 9s:\n\u003c/p\u003e\n\u003cpre\u003e\n- 99% (two 9s): 87.7 hours\n- 99.9% (three 9s): 8.8 hours\n- 99.99%: 52.6 minutes\n- 99.999%: 5.3 minutes\n\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SLO","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Short for \"service-level objective\", an SLO is a guarantee given to a customer\n  by a service provider. SLOs typically make guarantees on a system's\n  availability, amongst other things. SLOs constitute an SLA.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SLA","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Short for \"service-level agreement\", an SLA is a collection of guarantees\n  given to a customer by a service provider. SLAs typically make guarantees on a\n  system's availability, amongst other things. SLAs are made up of one or\n  multiple SLOs.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"cloud-architecture","name":"Cloud Architecture","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"SaaS, DaaS, IaaS, PaaS, FaaS, BaaS, DCaaS...everything can be a service these days.\n\nLiterally.\n","video":{"vimeoId":"780367313","duration":34,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"API","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003eAn \u003cstrong\u003eAPI (Application Programming Interface)\u003c/strong\u003e is a set of\n        protocols, tools, and routines for building software applications. It\n        specifies how software components should interact and enables communication\n        between different software systems.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"SAAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eSoftware as a Service (SaaS)\u003c/strong\u003e is a cloud computing model where software applications are hosted\n        and delivered over the internet as a service. Users can access and use the software through a web browser or a\n        thin client, without having to install or maintain the software on their own computers or servers. SaaS\n        providers typically charge a subscription fee based on the number of users or the level of usage.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"PAAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003ePlatform as a Service (PaaS)\u003c/strong\u003e is a cloud computing model where a provider offers a platform or a\n        set of tools and services for developing, deploying, and managing software applications. PaaS allows developers\n        to focus on writing and testing their code, without having to worry about infrastructure, scaling, or\n        maintenance. PaaS providers typically offer various programming languages, frameworks, and middleware, as well\n        as features such as version control, collaboration, and integration with other services.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"IAAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\u003cp\u003e\u003cstrong\u003eInfrastructure as a Service (IaaS)\u003c/strong\u003e is a cloud computing model where a provider offers virtualized computing resources, such as servers, storage, and networking, as a service over the internet. IaaS allows users to provision and manage their own virtual machines, storage, and networking configurations, without having to own or maintain physical hardware. IaaS providers typically offer various operating systems, applications, and management tools, as well as features such as scalability, elasticity, and pay-per-use pricing.\u003c/p\u003e\u003c/div\u003e","url":null,"kinds":[]},{"name":"FAAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eFunction as a Service (FaaS)\u003c/strong\u003e is a cloud computing model where a provider offers a platform for\n        running individual functions or code snippets in response to specific events or triggers. FaaS allows developers\n        to write and deploy code without having to manage the underlying infrastructure or servers. The platform\n        automatically scales up or down the resources needed to execute the functions, and charges the user based on the\n        number of executions and the duration of the function. FaaS is often used for event-driven or serverless\n        architectures, and supports various programming languages and frameworks.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"cloud-storage","name":"Cloud Storage","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Why did the host trust the disk to provision storage for it?\n\nBecause the disk had always been there for it through thick and thin.\n","video":{"vimeoId":"780378187","duration":40,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Redundancy","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The process of replicating parts of a system in an effort to make it more\n  reliable.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Availability","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The odds of a particular server or service being up and running at any point\n  in time, usually measured in percentages. A server that has 99% availability\n  will be operational 99% of the time (this would be described as having two\n  \u003cb\u003enines\u003c/b\u003e of availability).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SSL","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eSecure Sockets Layer (SSL)\u003c/strong\u003e is a cryptographic protocol that was developed by Netscape in the\n        1990s to provide secure communication over a computer network. SSL enables secure data transmission by\n        encrypting the communication between a client and a server, ensuring the confidentiality, integrity, and\n        authentication of the transmitted data. SSL has been widely used to secure web browsing, email communication,\n        and other sensitive online activities. However, SSL has been succeeded by Transport Layer Security (TLS), which\n        is an updated and more secure version of the protocol. While the term \"SSL\" is still commonly used to refer to\n        secure communication, most modern applications and systems use TLS instead of SSL.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"TLS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eTransport Layer Security (TLS)\u003c/strong\u003e is a cryptographic protocol that provides secure communication\n        over a computer network, ensuring the confidentiality, integrity, and authentication of the transmitted data.\n        TLS is the successor to Secure Sockets Layer (SSL) and was developed by the Internet Engineering Task Force\n        (IETF) to address the security flaws and limitations of SSL. TLS is widely used to secure web browsing, email\n        communication, instant messaging, and other sensitive online activities.\u003c/p\u003e\n    \u003cp\u003eTLS employs a combination of symmetric and asymmetric encryption algorithms, digital certificates, and message\n        authentication codes to protect the data being transmitted. The protocol consists of two main sub-protocols: the\n        TLS Handshake Protocol, which establishes a secure connection and negotiates encryption algorithms, and the TLS\n        Record Protocol, which encrypts and transmits the data. TLS is continually being updated and improved, with the\n        most recent version being TLS 1.3, which was published as an IETF standard in 2018.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Authentication","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eAuthentication\u003c/strong\u003e is the process of verifying the identity of a user, device, or system attempting\n        to access a secured resource, such as a computer network, application, or online service. Authentication ensures\n        that only authorized entities can gain access to sensitive data or resources, helping to protect against\n        unauthorized access and security breaches. Common authentication methods include the use of passwords, security\n        tokens, biometrics, and digital certificates. Multi-factor authentication (MFA) combines two or more of these\n        methods to provide an additional layer of security, making it more difficult for attackers to compromise an\n        account or system.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Authorization","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eAuthorization\u003c/strong\u003e is the process of determining the actions, operations, or resources that an\n        authenticated user, device, or system is permitted to access or perform within a secured environment.\n        Authorization is typically based on predefined access control policies, roles, or permissions that are assigned\n        to users or groups. These policies define the specific actions that can be performed, such as read, write,\n        delete, or execute, as well as the resources that can be accessed, such as files, directories, or network\n        services. By enforcing proper authorization controls, organizations can ensure that users and systems can only\n        access the resources they need to perform their tasks, minimizing the potential impact of security breaches and\n        maintaining the principle of least privilege.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Blob Storage","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Widely used kind of storage, in small and large scale systems. They don’t\n  really count as databases per se, partially because they only allow the user\n  to store and retrieve data based on the name of the blob. This is sort of like\n  a key-value store but usually blob stores have different guarantees. They\n  might be slower than KV stores but values can be megabytes large (or sometimes\n  gigabytes large). Usually people use this to store things like\n  \u003cb\u003elarge binaries, database snapshots, or images\u003c/b\u003e and other static assets\n  that a website might have.\n\u003c/p\u003e\n\u003cp\u003e\n  Blob storage is rather complicated to have on premise, and only giant\n  companies like Google and Amazon have infrastructure that supports it. So\n  usually in the context of System Design interviews you can assume that you\n  will be able to use \u003cb\u003eGCS\u003c/b\u003e or \u003cb\u003eS3\u003c/b\u003e. These are blob storage services\n  hosted by Google and Amazon respectively, that cost money depending on how\n  much storage you use and how often you store and retrieve blobs from that\n  storage.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"File Storage","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eFile storage\u003c/strong\u003e refers to a type of data storage where files are stored and retrieved as individual\n        units. It is commonly used for storing documents, images, videos, and other types of digital files. File storage\n        can be implemented using various technologies, such as network-attached storage (NAS), direct-attached storage\n        (DAS), or cloud-based storage services. File storage typically allows users to organize and manage their files\n        in a hierarchical directory structure, and provides features such as access control, versioning, and backup and\n        restore.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"NAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eNetwork Attached Storage (NAS)\u003c/strong\u003e is a type of file-level\n        storage that allows multiple users and client devices to access and\n        share data over a network. It is often used for centralized storage and\n        backup of data, as well as for hosting media files and streaming\n        services.\u003c/p\u003e\n\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"DAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eDAS (Direct Attached Storage):\u003c/strong\u003e A type of digital storage system that is directly connected to a\n        single computer or server, without the need for a network connection. DAS is commonly found in the form of\n        internal and external hard disk drives (HDDs), solid-state drives (SSDs), and other storage devices. It provides\n        fast access to stored data and is commonly used for individual computers, workstations, and small-scale data\n        storage needs.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"S3 Buckets","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eAmazon S3 (Simple Storage Service) Buckets\u003c/strong\u003e are storage containers for objects in Amazon Web\n        Services' (AWS) S3 service. S3 is a highly scalable, durable, and available object storage service that is\n        designed to store and retrieve data from anywhere on the internet. Each S3 bucket must have a unique name within\n        the AWS ecosystem and can be used to store any number of objects, such as documents, images, videos, or backups.\n        S3 buckets can be configured with various access control policies, versioning, and lifecycle policies to manage\n        the stored data according to the user's requirements. Data stored in S3 buckets is automatically distributed\n        across multiple devices and facilities, ensuring high durability and availability.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"DAS","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\u003cstrong\u003eDAS (Direct Attached Storage):\u003c/strong\u003e A type of digital storage system that is directly connected to a\n        single computer or server, without the need for a network connection. DAS is commonly found in the form of\n        internal and external hard disk drives (HDDs), solid-state drives (SSDs), and other storage devices. It provides\n        fast access to stored data and is commonly used for individual computers, workstations, and small-scale data\n        storage needs.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"cloud-compute-and-serverless","name":"Cloud Compute And Serverless","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"Why are cloud storage service providers unable to float in water?\n\nBecause they're always synching.\n","video":{"vimeoId":"780384104","duration":34,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Stateful","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA server or process is called \"stateful\" when it derives its\nfunctionality from storing and retrieving things from disk.\nDatabases are primary case studies for stateful servers. Because of this\npersistence requirement, it's much more difficult to run and manage\nstateful servers compared to \u003cb\u003eStateless\u003c/b\u003e servers because they\ncan't be stopped and restarted on any physical machine.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Stateless","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nA server is usually called \"stateless\" if it does not \u003ci\u003erequire\u003c/i\u003e\nstate to be persisted to disk in order to run successfully. Although\nmany server process typically hold some state in memory including\ncaching layers for instance, this typically means that we can\nrun the server process the same way on any machine, and move\nit around whenever we want. This contrasts with \u003cb\u003eStateful\u003c/b\u003e\nprocesses.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Publish Subscribe Pattern","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Often shortened as \u003cb\u003ePub/Sub\u003c/b\u003e, the Publish/Subscribe pattern is a popular\n  messaging model that consists of \u003cb\u003epublishers\u003c/b\u003e and \u003cb\u003esubscribers\u003c/b\u003e.\n  Publishers publish messages to special \u003cb\u003etopics\u003c/b\u003e (sometimes called\n  \u003cb\u003echannels\u003c/b\u003e) without caring about or even knowing who will read those\n  messages, and subscribers subscribe to topics and read messages coming through\n  those topics.\n\u003c/p\u003e\n\u003cp\u003e\n  Pub/Sub systems often come with very powerful guarantees like\n  \u003cb\u003eat-least-once delivery\u003c/b\u003e, \u003cb\u003epersistent storage\u003c/b\u003e, \n  \u003cb\u003eordering\u003c/b\u003e of messages, and \u003cb\u003ereplayability\u003c/b\u003e of messages.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Asynchronous","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Asynchronous describes the relationship between two or more events/objects that do interact within the same system but do not occur at predetermined intervals and do not necessarily rely on each other's existence to function. They are not coordinated with each other, meaning they could occur simultaneously or not because they have their own separate agenda.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Synchronous","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Cloud sync is the synchronization between devices for files that live on cloud storage. The cloud provider offers sync capabilities so that any changes or updates to files and new uploads are all available across devices in near real time. Cloud sync services deliver on the promise of anywhere, anytime access for individuals, groups, or enterprises.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Memory Optimized Instances","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Memory optimized instances are designed to deliver fast performance for workloads that process large data sets in memory.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Memory Ballooning","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Memory ballooning is a common virtualization technology technique that makes use of virtual machine memory. It is a memory management feature found in most virtualization platforms that allows a host system to artificially enlarge its memory pool by taking advantage or reclaiming unused memory previously allocated to various virtual machines.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dedicated Host","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Dedicated hosting is an Internet hosting option in which a physical server is dedicated to a single business customer. The customer has complete control over the machine, so they can optimize it for their unique requirements, including performance and security. The hosting provider supplies the physical server and environment, the associated services and technical support.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dedicated Server","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A dedicated server is a type of remote server that is entirely dedicated to an individual, organization or application. It is deployed, hosted and managed by a hosting, cloud or managed service provider. A dedicated server is exclusive and not shared with any other customer, service or application.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Shared Host","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    Shared hosting is a type of Web hosting service that allows multiple websites to share a physical Web server and its resources among the hosted websites. Shared hosting logically distributes a Web server to accommodate, serve and operate more than one website.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Cloud Pub Sub","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A highly-scalable Pub/Sub messaging service created by Google. Guarantees\n  \u003cb\u003eat-least-once delivery\u003c/b\u003e of messages and supports \"rewinding\" in order to\n  reprocess messages.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"cloud-networking","name":"Cloud Networking","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"While cloud networking shares many similarities with physical networking, it also brings unique twists to many traditional networking concepts. This video will walk you through some of the nuances that come into play when running virtual infrastructure.\n","video":{"vimeoId":"780385932","duration":15,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Segment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A process is divided into Segments. The chunks that a program is divided into which are not necessarily all of the same sizes are called segments. Segmentation gives user’s view of the process which paging does not give. Here the user’s view is mapped to physical memory.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Firewall","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A firewall is a network security device that monitors incoming and outgoing network traffic and permits or blocks data packets based on a set of security rules. Its purpose is to establish a barrier between your internal network and incoming traffic from external sources (such as the internet) in order to block malicious traffic like viruses and hackers.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"VPC","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A virtual private cloud (VPC) is a secure, isolated private cloud hosted within a public cloud. VPC customers can run code, store data, host websites, and do anything else they could do in an ordinary private cloud, but the private cloud is hosted remotely by a public cloud provider. VPCs combine the scalability and convenience of public cloud computing with the data isolation of private cloud computing.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"VLAN","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    VLAN (Virtual Local Area Network) is a custom network which is created from one or more local area networks. It enables a group of devices available in multiple networks to be combined into one logical network. The result becomes a virtual LAN that is administered like a physical LAN.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Default Gateway","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A default gateway is a node that enables a connection between networks in order to allow machines on other networks to communicate. The default part of the terminology relates to the fact it is often the first and default route taken. \n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"DMZ","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A DMZ (demilitarized zone) functions as a subnetwork containing an organization's exposed, outward-facing services. It acts as the exposed point to an untrusted networks, commonly the Internet. The goal of a DMZ is to add an extra layer of security to an organization's local area network. A protected and monitored network node that faces outside the internal network can access what is exposed in the DMZ, while the rest of the organization's network is safe behind a firewall.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Gateway","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A gateway is a network node used in telecommunications that connects two networks with different transmission protocols together. Gateways serve as an entry and exit point for a network as all data must pass through or communicate with the gateway prior to being routed.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"cloud-security-and-iam","name":"Cloud Security And IAM","module":"The Cloud","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["infraexpert"],"isAvailable":true},"description":"You've made it to the final video of the InfraExpert Crash Course! \n\nThis is an important one, so if you're currently daydreaming or feeling distracted, please take your head out of the clouds—pun absolutely intended—and give us your undivided attention one last time.\n","video":{"vimeoId":"780337086","duration":19,"annotations":[],"instructor":"Delia Lazarescu","thumbnail":"https://i.vimeocdn.com/video/1299578681-828e5ecc45fb2af888c005e1d5eddc1cc7ca8cfbbb130b030_640x360?r=pad"},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[{"name":"Private Key","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A private key, is a variable in cryptography that is used with an algorithm to encrypt and decrypt data. Private keys should only be shared with the key's generator or parties authorized to decrypt the data. Private keys play an important role in symmetric cryptography, asymmetric cryptography and cryptocurrencies.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Hardening","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\nHardening refers to providing various means of protection in a computer system. Protection is provided \nin various layers and is often referred to as defense in depth. Protecting in layers means to protect at the \nhost level, the application level, the operating system level, the user level, the physical level and all the \nsublevels in between. Each level requires a unique method of security.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Asymmetric Encryption","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Also known as public-key encryption, asymmetric encryption relies on two\n  keys—a public key and a private key—to encrypt and decrypt data. The keys are\n  generated using cryptographic algorithms and are mathematically connected such\n  that data encrypted with the public key can only be decrypted with the private\n  key.\n\u003c/p\u003e\n\u003cp\u003e\n  While the private key must be kept secure to maintain the fidelity of this\n  encryption paradigm, the public key can be openly shared.\n\u003c/p\u003e\n\u003cp\u003e\n  Asymmetric-key algorithms tend to be slower than their symmetric counterparts.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Symmetric Encryption","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A type of encryption that relies on only a single key to both encrypt and\n  decrypt data. The key must be known to all parties involved in communication\n  and must therefore typically be shared between the parties at one point or\n  another.\n\u003c/p\u003e\n\u003cp\u003e\n  Symmetric-key algorithms tend to be faster than their asymmetric counterparts.\n\u003c/p\u003e\n\u003cp\u003e\n  The most widely used symmetric-key algorithms are part of the Advanced\n  Encryption Standard (\u003cb\u003eAES\u003c/b\u003e).\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SSL Certificate","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A digital certificate granted to a server by a \u003cb\u003ecertificate authority\u003c/b\u003e.\n  Contains the server's public key, to be used as part of the\n  \u003cb\u003eTLS handshake\u003c/b\u003e process in an \u003cb\u003eHTTPS\u003c/b\u003e connection.\n\u003c/p\u003e\n\u003cp\u003e\n  An SSL certificate effectively confirms that a public key belongs to the\n  server claiming it belongs to them. SSL certificates are a crucial defense\n  against \u003cb\u003eman-in-the-middle attacks\u003c/b\u003e.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"keyTerms":[{"name":"Block Cipher","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A block cipher is a method of encrypting data in blocks to produce ciphertext using a cryptographic key and algorithm. The block cipher processes fixed-size blocks simultaneously, as opposed to a stream cipher, which encrypts data one bit at a time. Most modern block ciphers are designed to encrypt data in fixed-size blocks of either 64 or 128 bits.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Stream Cipher","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    A stream cipher is a method of encrypting text to produce ciphertext in which a cryptographic key and algorithm are applied to each binary digit in a data stream, one bit at a time.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"ACL","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Short for \u003cb\u003eAccess-Control List\u003c/b\u003e. This term is often used to refer to a\n  permissioning model: which users in a system can perform which operations. For\n  instance, APIs often come with ACLs defining which users can delete, edit, or\n  view certain entities.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"PKI","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    PKI (public key infrastructure) is the underlying framework that enables entities such as users and servers to securely exchange information using digital certificates. The entities that facilitate and use PKI typically involve general internet users, web clients or browsers, and company servers although this can extend to other virtual machines (VMs) as well.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false}]}
